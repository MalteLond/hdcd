% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/binary_segmentation.R
\name{BinarySegmentation}
\alias{BinarySegmentation}
\title{BinarySegmentation}
\usage{
BinarySegmentation(x, delta, lambda, method = c("glasso",
  "nodewise_regression", "summed_regression", "ratio_regression"),
  threshold = 1e-07, penalize_diagonal = F, use_ternary_search = F, ...)
}
\arguments{
\item{x}{A n times p matrix for which to find the best splitting point.}

\item{delta}{Value between 0 and 1. Tuning param which determines the minimal segment size
proportional to the size of the dataset and hence an upper bound for the number of changepoints.}

\item{lambda}{Sparsity penality parameter in single lasso fits.}

\item{method}{Which method should be used for fitting the model? See defaults for possible choices.}

\item{threshold}{The threshold for halting the iteration in glasso or glmnet. In the former it controls the change of single parameters
in the latter it controls the total objective value.}

\item{penalize_diagonal}{Boolean, should the diagonal elements of the precision matrix be penalized?}

\item{use_ternary_search}{Use a ternary search algorithm in each level of the recursion to find a local optimum (EXPERIMNETAL)}
}
\value{
An object of class \strong{bs_tree}
}
\description{
Uses the binary segmentation algorithmn in order to build a binary tree of the data sequence
and given tuning parameters lambda and delta recursively. The tree can then be pruned in order to obtain
a changepoint estimate.
}
\examples{
dat <- SimulateFromModel(CreateModel(n_segments = 2,n = 100,p = 30, ChainNetwork))
res <- BinarySegmentation(dat, delta = 0.1, lambda = 0.01, method = "summed_regression")
print(res)
}
