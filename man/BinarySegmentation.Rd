% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/binary_segmentation.R
\name{BinarySegmentation}
\alias{BinarySegmentation}
\title{BinarySegmentation}
\usage{
BinarySegmentation(x, delta, lambda, method = c("nodewise_regression",
  "summed_regression", "ratio_regression"), penalize_diagonal = F,
  optimizer = c("line_search", "ternary_search", "section_search"),
  control = NULL, standardize = T, threshold = 1e-07, verbose = FALSE,
  ...)
}
\arguments{
\item{x}{A n times p data matrix.}

\item{delta}{Numeric value between 0 and 0.5. Tuning param which determines the minimal segment size
proportional to the size of the dataset and hence an upper bound for the number of changepoints.}

\item{lambda}{Positive numeric value. This is the regularization parameter in the single Lasso fits.}

\item{method}{Which estimator should be used? Possible choices are
\itemize{
  \item nodewise_regression: Nodewise regression is based on a single node that needs to be specified with an additional parameter p.
  \item summed_regression: Summed nodewise regression sums up the residual variances of nodewise regression over all nodes.
  \item ratio_regression: Likelihood ratio based regression sums the pseudo-profile-likelihood over all nodes.
}}

\item{penalize_diagonal}{Boolean, should the diagonal elements of the precision matrix be penalized?}

\item{optimizer}{Which search technique should be used for performing individual splits in the binary segmentation alogrithm? Possible choices are
\itemize{
  \item line_search: Exhaustive linear search. All datapoints are evaluated and the maximum is returned.
  \item ternary_search: Iteratively cuts the search space according by a fixed ratio and approximately finds a local maximum.
  \item section_search: Iteratively cuts the search space according by a flexible ratio as determined by stepsize in control parameter and approximately finds a local maximum.
}}

\item{control}{A list with parameters that is accessed by the optimizer.
\itemize{
  \item stepsize: Numeric value between 0 and 0.5. Used by section search.
  \item intervals: Integer value larger than 3. Used by ternary search.
}}

\item{standardize}{Boolean. If TRUE the penalty parameter \eqn{\lambda} will be the standard deviation for every dimension in the single Lasso fits.}

\item{threshold}{The threshold for halting the iteration in glasso or glmnet. In the former it controls the absolute change of single parameters in the latter it controls the total objective value.}

\item{verbose}{Boolean. If TRUE additional information will be printed.}

\item{...}{Supply additional arguments for a specific method (e.g. p for nodewise_regression)}
}
\value{
An object of class \strong{bs_tree}.
}
\description{
Uses the binary segmentation algorithmn in order to build a binary tree. The tree can then be pruned in order to obtain
a changepoint estimate.
}
\examples{
dat <- SimulateFromModel(CreateModel(n_segments = 2,n = 50,p = 30, ChainNetwork))
res <- BinarySegmentation(dat, delta = 0.1, lambda = 0.01, method = "summed_regression")
print(res)
}
