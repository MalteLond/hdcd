% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cross_validation.R
\name{CrossValidation}
\alias{CrossValidation}
\title{CrossValidation}
\usage{
CrossValidation(x, delta = c(0.1, 0.25), lambda = NULL, gamma = NULL,
  n_folds = 10, grid_size = 20, method = c("nodewise_regression",
  "summed_regression", "ratio_regression"), penalize_diagonal = F,
  optimizer = c("line_search", "ternary_search", "section_search"),
  control = NULL, standardize = T, threshold = 1e-07, parallel = T,
  verbose = T, ...)
}
\arguments{
\item{x}{A n times p data matrix.}

\item{delta}{Value between 0 and 0.5. Tuning param which determines the minimal segment size
proportional to the size of the dataset and hence an upper bound for the number of changepoints.}

\item{lambda}{Sparsity penality parameter in single lasso fits.}

\item{gamma}{If NULL the range of gamma will be determined by doing an extra fit on the full model and taking the
difference between the full segment loss and the loss of the first split.}

\item{n_folds}{Number of folds. Test data will be selected equi-spaced, i.e. each n_fold-th observation.}

\item{method}{Which method should be used for fitting the model? See defaults for possible choices.}

\item{penalize_diagonal}{Boolean, should the diagonal elements of the precision matrix be penalized?}

\item{control}{}

\item{threshold}{The threshold for halting the iteration in glasso or glmnet. In the former it controls the change of single parameters
in the latter it controls the total objective value.}

\item{verbose}{If TRUE additional information will be printed.}
}
\value{
A nested list with the cv results and the full fitted models for each gamm, lambda combination.
}
\description{
EXPERIMENTAL. Crossvalidation for the desired method and parameter combinations.
Evaluating different lambda values will lead to refitting the entire model whereas gamma values can be evaluted cheaply using a
single fit.
}
\details{
Will make use of a registered parallel backend over the folds and lambda values. Therefore the whole cross-validation will make
use even of a high number of compute nodes (up to number of folds times number of lambda values) efficiently.
}
\examples{
dat <- SimulateFromModel(CreateModel(n_segments = 2,n = 100,p = 30, ChainNetwork))
CrossValidation(dat, delta = 0.1, method = "summed_regression")
}
